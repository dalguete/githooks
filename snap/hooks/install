#!/bin/sh

########################
## 'Package checkings ##
########################

TO_INSTALL=

# Check 'bash' package is installed in host.
echo "Checking 'bash' package is available..."
which bash
ERROR_CODE=$?

if [ $ERROR_CODE != 0 ]; then
  TO_INSTALL="$TO_INSTALL bash"
fi

# Check 'coreutils' package is installed in host.
echo "Checking 'coreutils' package is available..."
which readlink
ERROR_CODE=$?

if [ $ERROR_CODE != 0 ]; then
  TO_INSTALL="$TO_INSTALL coreutils"
fi

# Check 'util-linux' package is installed in host.
echo "Checking 'util-linux' package is available..."
which getopt
ERROR_CODE=$?

if [ $ERROR_CODE != 0 ]; then
  TO_INSTALL="$TO_INSTALL util-linux"
fi

# Check 'git' package is installed in host.
echo "Checking 'git' package is available..."
which git
ERROR_CODE=$?

if [ $ERROR_CODE != 0 ]; then
  TO_INSTALL="$TO_INSTALL git"
fi

############################
## 'Package installations ##
############################

if [ -z "$TO_INSTALL" ]; then
  echo "Ol Korrect :P"
  exit
fi

# Updating packages.
echo "Installing missing packages..."
apt-get update
apt-get install -y "$TO_INSTALL"
ERROR_CODE=$?

if [ $ERROR_CODE != 0 ]; then
  echo "Error in installation!" >&2
  exit $ERROR_CODE
fi

###########################
## 'Package re-checkings ##
###########################

# Check 'bash' package is installed in host.
echo "Checking 'bash' package is available..."
which bash
ERROR_CODE=$?

if [ $ERROR_CODE != 0 ]; then
  echo "Package 'bash' still not available!" >&2
  exit $ERROR_CODE
fi

# Check 'coreutils' package is installed in host.
echo "Checking 'coreutils' package is available..."
which readlink
ERROR_CODE=$?

if [ $ERROR_CODE != 0 ]; then
  echo "Package 'coreutils' still not available!" >&2
  exit $ERROR_CODE
fi

# Check 'util-linux' package is installed in host.
echo "Checking 'util-linux' package is available..."
which getopt
ERROR_CODE=$?

if [ $ERROR_CODE != 0 ]; then
  echo "Package 'util-linux' still not available!" >&2
  exit $ERROR_CODE
fi

# Check 'git' package is installed in host.
echo "Checking 'git' package is available..."
which git
ERROR_CODE=$?

if [ $ERROR_CODE != 0 ]; then
  echo "Package 'git' still not available!" >&2
  exit $ERROR_CODE
fi
